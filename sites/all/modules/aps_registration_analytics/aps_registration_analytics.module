<?php
/**
 * @file
 * Front-end interfaces that use the Google Analytics API module.
 */

/**
 * Implementation of hook_menu().
 */
function aps_registration_analytics_menu() {
  $items['google-analytics-reports/ajax/aps-analytics'] = array(
    'title' => 'aps traffic',
    'page callback' => 'aps_registration_analytics_ajax',
    'access arguments' => array('access google analytics reports'),
    'file' => 'aps_registration_analytics.blocks.inc',
    'type' => MENU_CALLBACK,
  );
  $items['google-analytics-reports/ajax/common-browser'] = array(
    'title' => 'Browser',
    'page callback' => 'aps_registration_analytics_common_browser',
    'access arguments' => array('access google analytics reports'),
    'file' => 'aps_registration_analytics.blocks.inc',
    'type' => MENU_CALLBACK,
  );
  $items['google-analytics-reports/ajax/geo-location'] = array(
    'title' => 'Geographic Locations',
    'page callback' => 'aps_registration_analytics_geo_location',
    'access arguments' => array('access google analytics reports'),
    'file' => 'aps_registration_analytics.blocks.inc',
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Implements hook_block_info().
 */
function aps_registration_analytics_block_info() {
  $blocks['aps_analytics']['info'] = t('aps Analytics');
  $blocks['common_browser']['info'] = t('Browser');
  $blocks['geo_location']['info'] = t('Geographic Locations');
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function aps_registration_analytics_block_view($delta = '') {
  switch ($delta) {
    case 'aps_analytics':
      $block['subject'] = t('aps traffic');
      $block['content'] = '<div class="aps-registration-analytics"></div>';
      return $block;
    case 'common_browser':
      $block['subject'] = t('Browsers Used');
      $block['content'] = '<div id="aps-common-browser"></div>';
      return $block;
    case 'geo_location':
      $block['subject'] = t('Geographic Locations');
      $block['content'] = draw_test_chart();
      return $block;
  }
}

function draw_test_chart() {
  $settings['chart']['chartOne'] = array(  
    'header' => array('Apple', 'Banana', 'Mango'),
    'rows' => array(array(12, 6, 8)),
    'columns' => array('Fruit count'),
    'chartType' => 'PieChart',
    'containerId' =>  'content',
    'options' => array( 
      'forceIFrame' => FALSE, 
      'title' => 'Fruit count',
      'width' => 800,
      'height' => 400  
    )   
  );
  
//Draw it.
  return draw_chart($settings); 
}

/**
 * Implements hook_theme().
 */
function aps_registration_analytics_theme() {
  return array(
    'aps_registration_analytics_aps_analytics' => array(
      'variables' => array('report' => NULL),
      'file' => 'aps_registration_analytics.theme.inc',
    ),
    'aps_registration_analytics_common_browser' => array(
      'variables' => array('report' => NULL),
      'file' => 'aps_registration_analytics.theme.inc',
    ),
    'aps_registration_analytics_geo_location' => array(
      'variables' => array('report' => NULL),
      'file' => 'aps_registration_analytics.theme.inc',
    ),
  );
}

/*
 * Construct a filter string that only allows the hours the webcast is active.
 */
function _google_analytics_reports_live_filter($start = '', $end = '') {
  if (!empty($start) && !empty($end)) {
    foreach (range(date('H', strtotime($start)), date('H', strtotime($end))) as $hour) {
      $hours[] = 'ga:hour==' . str_pad($hour, 2, 0, STR_PAD_LEFT);
    }
    return implode(',',$hours);
  } 
}